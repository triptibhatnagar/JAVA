Computers only understand 0 and 1.
    Programming - way to instruct the computer to perform various tasks.
    Instructing computers in 0,1 is difficult for humans, so we have prog lang.

    TYPES OF PROG LANG -
    1) Procedural
    - Specifies a series of well defined steps and procedures to compose a program.
    - Contains a systematic order of statements functions and commands to complete a task.
    - Procedural programming follows a top-down approach.
    Eg - Python, C, C++, Dart, Java
    2) Functional
    - Writing a program only in pure functions, i.e., never modify variables but create new ones as an output.
    - Used in a situation where we have to perform lots of operations on the same set of data like ML.
    - Functions are First-Class and can be Higher-Order. First-class functions are treated as first-class  variable. The first class variables can be passed to functions as parameter, can be returned from functions or stored in data structures. Higher order functions are the functions that take other functions as arguments and they can also return functions. 
    Eg - Python, Java 8, C++
    3) Object-Oriented 
    - In object-oriented programming, the program is divided into small parts called objects.
    - Object-oriented programming follows a bottom-up approach.
    - Code + data = objects
    - It is developed to easily develop, debug, reuse and maintain a software.
    Eg - Java, Javascript, Typescript, Python, C++, Dart


    STATIC AND DYNAMIC LANGUAGES
    Static :
    - Perform type checking at compile time.
    - Errors will show at compile time.
    - Declare datatypes before use.
    - More control over the program.
    Dynamic :
    - Perform type checking at run time.
    - Error might not show till the program runs.
    - No need to declare datatypes.
    - Saves time in writing code but might give error at runtime.


    MEMORY MANAGEMENT
    2 types of memory - Stack and Heap
    - Reference variables stored in stack.
    - Objects of reference variables stored in heap.
    Eg - a=10
    a is stored in stack and 10 is stored in heap.

    - More than one reference variables can point to the same object.
    - If any change made to the object by any reference variable, that change will be reflected to all other reference variables pointing to same object.
    - object w/o reference variable, it will be destroyed by garbage collection.
    - The garbage collection implementation lives in the JVM. 